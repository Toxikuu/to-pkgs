#!/to

n="nvidia"
v="575.51.02"
a="${n^^} drivers"
m="Tox"
l="Custom"
t="lib utils cli gfx drivers"
u="https://github.com/${n^^}/open-gpu-kernel-modules.git"
vf="curl -s https://api.github.com/repos/${n^^}/open-gpu-kernel-modules/releases/latest | grep tag_name | cut -d'\"' -f4"

s=(
    "https://us.download.$n.com/XFree86/Linux-x86_64/$v/${n^^}-Linux-x86_64-$v.run"
    "https://glfs-book.github.io/glfs/patches/$n/$n-$v-gcc15.patch"
)

d=(
    "libglvnd"
    "kernel"
    "b,libelf"
)

b() {

chmod +x "$S/NVIDIA-Linux-x86_64-$v.run"
"$S/${n^^}-Linux-x86_64-$v.run" -x
cd "${n^^}-Linux-x86_64-$v"

pat "$S/$n-$v-gcc15.patch" -d kernel
pat "$S/$n-$v-gcc15.patch" -d kernel-open

kver=$(</usr/src/linux/version)

_cfg=(
    --silent
    --ui=none
    --no-rpms
    --no-x-check
    --no-peermem
    --no-systemd
    --no-abi-note
    --no-questions
    --x-prefix=/usr
    --disable-nouveau
    --skip-module-load
    --no-nouveau-check
    --no-ncurses-color
    --force-selinux=no
    --kernel-name=$kver
    --no-install-libglvnd
    --no-rebuild-initramfs
    --no-install-compat32-libs
    --kernel-module-type=proprietary
    --no-check-for-alternate-installs
    --kernel-source-path=/usr/src/linux
    --allow-installation-with-running-driver
    --kernel-install-path="$D"/usr/lib/modules/$kver/kernel/drivers/video
)

echo "Building $n@$v for kernel@$kver..." >&2
# TODO: DKMS that shit
./nvidia-installer "${_cfg[@]}"

# Install NVIDIA components

## Libraries

### X driver
install -vDm755 "${n}_drv.so"                   -t "$D/usr/lib/xorg/modules/drivers/"

### Firmware (Turing)
install -vDm644 "firmware/gsp_tu10x.bin"        -t "$D/usr/lib/firmware/$n/$v/"

### Misc
install -vDm755 "lib$n-allocator.so.$v"         -t "$D/usr/lib"
install -vDm755 "lib$n-api.so.1"                -t "$D/usr/lib"
install -vDm755 "lib$n-cfg.so.$v"               -t "$D/usr/lib"
install -vDm755 "lib$n-encode.so.$v"            -t "$D/usr/lib"
install -vDm755 "lib$n-fbc.so.$v"               -t "$D/usr/lib"
install -vDm755 "lib$n-glvkspirv.so.$v"         -t "$D/usr/lib"
install -vDm755 "lib$n-gpucomp.so.$v"           -t "$D/usr/lib"
install -vDm755 "lib$n-ml.so.$v"                -t "$D/usr/lib"

### GLX stuff
install -vDm755 "libglxserver_$n.so.$v"         -t "$D/usr/lib/$n/xorg/"
ln -sv "libglxserver_$n.so.$v"                     "$D/usr/lib/$n/xorg/libglxserver_$n.so.1"
ln -sv "libglxserver_$n.so.$v"                     "$D/usr/lib/$n/xorg/libglxserver_$n.so"

### OpenGL
install -vDm644 "10_$n.json"                    -t "$D/usr/share/glvnd/egl_vendor.d/"
install -vDm755 "lib$n-eglcore.so.$v"           -t "$D/usr/lib/"
install -vDm755 "lib$n-glcore.so.$v"            -t "$D/usr/lib/"
install -vDm755 "lib$n-glsi.so.$v"              -t "$D/usr/lib/"
install -vDm755 "libEGL_$n.so.$v"               -t "$D/usr/lib/"
install -vDm755 "libGLESv2_$n.so.$v"            -t "$D/usr/lib/"

### Vulkan
install -vDm644 "${n}_icd.json"                 -t "$D/usr/share/vulkan/icd.d/"
install -vDm644 "${n}_layers.json"              -t "$D/usr/share/vulkan/implicit_layer.d/"

### VDPAU
install -vDm755 "libvdpau_$n.so.$v"             -t "$D/usr/lib/vdpau/"

### CUDA
install -vDm755 "libcuda.so.$v"                 -t "$D/usr/lib/"
install -vDm755 "libnvcuvid.so.$v"              -t "$D/usr/lib/"

### CUDA compiler infrastructure
install -vDm644 "lib$n-nvvm.so.$v"              -t "$D/usr/lib/"
install -vDm755 "lib$n-ptxjitcompiler.so.$v"    -t "$D/usr/lib/"

### Raytracing
install -vDm755 "lib$n-rtcore.so.$v"            -t "$D/usr/lib/"
install -vDm755 "libnvoptix.so.$v"              -t "$D/usr/lib/"
install -vDm755 "nvoptix.bin"                   -t "$D/usr/share/$n/"

### Optical flow
install -vDm755 "lib$n-opticalflow.so.$v"       -t "$D/usr/lib/"

### Application profiles
install -vDm644 "$n-application-profiles-$v-rc" -t "$D/usr/share/$n/"

## Programs

### nvidia-xconfig
install -vDm755 "$n-xconfig"                    -t "$D/usr/bin/"

### nvidia-smi
install -vDm755 "$n-smi"                        -t "$D/usr/bin/"

### nvidia-modprobe
# FIX: Remove setuid whenever NVIDIA gets their shit together
install -vDm4755 "$n-modprobe"                  -t "$D/usr/bin"

il
install -vDm644 "README.txt"                       "$D/usr/share/doc/$n/README"

# Create a DRI pkgconfig file for packages expecting one
install -vDm644 /dev/stdin "$D"/usr/lib/pkgconfig/dri.pc << "EOF"
prefix=/usr
includedir=\${prefix}/include

dridriverdir=/usr/lib/dri

Name: dri
Description: Direct Rendering Infrastructure
Version: $v
Requires.private: libdrm >= 2.4.109
Cflags: -I\${includedir}
EOF

# Blacklist Nouveau
install -vDm644 /dev/stdin "$D/usr/lib/modprobe.d/nvfb.conf" << "EOF"
# /usr/lib/modprobe.d/nvfb.conf

blacklist nvidiafb
blacklist nouveau
EOF

}

i() {

if to data -i xorg-server; then
    nvidia-xconfig
fi

}
