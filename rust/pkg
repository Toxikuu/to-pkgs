#!/to

n="rust"
v="1.88.0"
a="The Rust programming language"
m="Tox"
l=(
    "Apache-2.0"
    "MIT"
)
t="lang utils cli lib core"
u="https://github.com/$n-lang/$n.git"
vf="gr | vfs | grep -v 'release-' | sort -V"

s="https://raw.githubusercontent.com/rust-lang/rustup/refs/heads/master/rustup-init.sh"

d=(
    "curl"
    "make-ca"
    "glibc"
    "openssl"
    "zlib"
)

qa=("!static")

b() {

export CARGO_HOME="$D"/opt/cargo
export RUSTUP_HOME="$D"/opt/rustup
export RUSTUP_LOG="info"

mkdir -pv "$CARGO_HOME" "$RUSTUP_HOME"

_cfg=(
    -y
    --no-modify-path
    --default-toolchain="$v"
    --default-host="x86_64-unknown-linux-gnu"
    --component cargo,clippy,rustfmt
)

sh rustup-init.sh "${_cfg[@]}"

source "$CARGO_HOME"/env
rm -vf "$CARGO_HOME"/env

# Allow users in wheel to compile. The idea is we change the group that owns the
# rust toolchain. Then we give read, write, execute, setgid permissions to the
# group, but write and execute to everyone else. For files, the group gets read
# and write permissions, and everyone else gets read.
chgrp -R wheel      "$CARGO_HOME" "$RUSTUP_HOME"
find "$CARGO_HOME" "$RUSTUP_HOME" -type d -exec chmod -v g+rwXs,o+rx {} +
find "$CARGO_HOME" "$RUSTUP_HOME" -type f -exec chmod -v g+rw,o+r    {} +

install -vDm644 "$A/rust-profile" "$D/etc/profile.d/15-rust.sh"

}
